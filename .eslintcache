[{"/home/dhirajbhor11/WorkSpace/React/dashboard/src/index.js":"1","/home/dhirajbhor11/WorkSpace/React/dashboard/src/App.js":"2","/home/dhirajbhor11/WorkSpace/React/dashboard/src/reportWebVitals.js":"3","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/login.js":"4","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/dashboard.js":"5","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/signup.js":"6","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/routers.js":"7","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/forgetPassword.js":"8","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/home.js":"9","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/navbar.js":"10"},{"size":907,"mtime":1607968359655,"results":"11","hashOfConfig":"12"},{"size":1163,"mtime":1608552055065,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606977965233,"results":"14","hashOfConfig":"12"},{"size":4008,"mtime":1608551684462,"results":"15","hashOfConfig":"12"},{"size":968,"mtime":1608264477862,"results":"16","hashOfConfig":"12"},{"size":7096,"mtime":1608469891152,"results":"17","hashOfConfig":"12"},{"size":801,"mtime":1607957171762,"results":"18","hashOfConfig":"12"},{"size":2234,"mtime":1607968702197,"results":"19","hashOfConfig":"12"},{"size":401,"mtime":1607956540958,"results":"20","hashOfConfig":"12"},{"size":2735,"mtime":1608469219059,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zf9nrn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/dhirajbhor11/WorkSpace/React/dashboard/src/index.js",[],["47","48"],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/App.js",["49"],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/reportWebVitals.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/login.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/dashboard.js",["50"],"import React from 'react';\nimport { Card, Jumbotron,Button } from 'react-bootstrap';\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/auth';\n\nclass Dashboard extends React.Component{\n    constructor(){\n        super();\n    }\n\n    componentDidMount(){\n    \n       //add({id:\"dhirajbhor\",nname:\"aditya varal\",email:\"adi@29gmail.com\"});\n        // console.log(useRef);\n    }\n\n    handleLogOut = () =>{\n        firebase.auth().signOut();\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Jumbotron>\n                    <h1>Welcome </h1>\n                </Jumbotron>\n                <Card style={{width:'18rem'}}>\n                    <Card.Img variant=\"top\" />\n                    <h3> User Loged In</h3>\n                    <Button onClick={this.handleLogOut}>\n                        Log Out\n                    </Button>\n                </Card>\n            </div>\n        );  \n    }\n}\n\nexport default  Dashboard;\n","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/signup.js",["51","52"],"import React, { createRef } from 'react';\nimport './css/signup.css';\nimport {Alert, Button, Card, Form, InputGroup }from 'react-bootstrap';\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { Link, Redirect } from 'react-router-dom';\nimport Notiflix from 'notiflix-react';\n\nclass Signup extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            passwordType:'password',\n            confirmPasswordType : 'password',\n            passwordMatchAlert : 'none'\n        }\n\n        this.confirmPassword = React.createRef();\n        this.password = React.createRef();\n        this.name = React.createRef();\n        this.emailId = React.createRef(); \n    }\n\n    componentDidMount(){\n        Notiflix.Notify.Init({});\n    }\n\n    checkPasswordForMatch =()=>{\n        if(this.confirmPassword.current.value === this.password.current.value){\n            this.setState({passwordMatchAlert:'none'});\n            return true;\n        }else{\n            this.setState({passwordMatchAlert:'block'});\n            return false;\n        }\n    }\n\n    changePasswordType=(event)=>{\n        if(this.state.passwordType === 'password'){\n            this.setState({passwordType : 'text'});\n        }else {\n            this.setState({passwordType : 'password'});\n        }\n    }\n\n    changeConfirmPasswordType=(event)=>{\n        if(this.state.confirmPasswordType === 'password'){\n            this.setState({confirmPasswordType : 'text'});\n        }else {\n            this.setState({confirmPasswordType : 'password'});\n        }\n    }\n\n    onFormSubmit=(event)=>{\n        if(!this.checkPasswordForMatch()){\n            const element = this.confirmPassword.current;\n            element.focus();\n            event.preventDefault();\n        }else {\n            firebase.auth().createUserWithEmailAndPassword(this.emailId.current.value,this.password.current.value).then((value)=>{\n                let db = firebase.firestore();\n                db.collection(\"users\").doc(value.user.uid).set({\n                    name:this.name.current.value,\n                    email : this.emailId.current.value\n                });\n                Notiflix.Notify.Success(\"Welcome\");\n            }).catch((error)=>{\n                Notiflix.Notify.Failure(error.message);\n            });\n            // event.preventDefault();\n            return <Redirect to=\"/dashboard\" />\n            \n        }\n    }\n\n\n    getData=()=>{\n        let myData = {\n            \"name\" : this.name.current.value ,\n            \"emailId\" : this.emailId.current.value ,\n            \"password\" : this.password.current.value\n        }\n\n        return JSON.stringify(myData);\n    }\n\n    \n    render(){\n        return(\n            <div className=\"signupForm\">\n                <Card style={{width:\"40rem\"}}>\n                    <Card.Header><h1> Sign Up </h1></Card.Header>\n                    <Card.Body>\n                        <Form onSubmit={this.onFormSubmit}>\n                            <Form.Group >\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" required ref={this.name}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Email-Id</Form.Label>\n                                <Form.Control type=\"email\" required ref={this.emailId}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <InputGroup>\n                                    <Form.Control type={this.state.passwordType} required minLength='8' onChange={this.checkPasswordForMatch} ref={this.password}/>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text onClick={this.changePasswordType}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-eye\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 \n                                            11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 \n                                            4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\" />\n                                            <path fillRule=\"evenodd\" d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n                                            </svg>\n                                        </InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Confirm Password</Form.Label>\n                                <InputGroup>\n                                    <Form.Control type={this.state.confirmPasswordType} required minLength='8' onChange={this.checkPasswordForMatch} ref={this.confirmPassword}/>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text onClick={this.changeConfirmPasswordType}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-eye\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 \n                                            11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 \n                                            4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\" />\n                                            <path fillRule=\"evenodd\" d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n                                            </svg>\n                                        </InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                                <small className=\"text-danger\" style={{display:this.state.passwordMatchAlert}}>Password Not Match</small>\n                            </Form.Group>\n                            <Button type=\"submit\"> \n                                Submit\n                            </Button>\n                        </Form>   \n                    </Card.Body>\n                    <Card.Footer>\n                        <Link to=\"/login\">Log In</Link>\n                    </Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default Signup;\n","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/routers.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/forgetPassword.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/home.js",["53"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nclass Home extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div>\n                    <Link to=\"/login\"> Log In</Link>\n                    <br />\n                    <Link to=\"/signup\">Sign up</Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/navbar.js",["54","55","56"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Form,Button,Card,InputGroup, Nav,Navbar as BNavbar,DropdownButton,Dropdown,ButtonGroup} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport 'firebase/database';\n\nclass Navbar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userName : null,\n            userId : null\n        }\n        console.log(this.props.userStatus);\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged((user)=>{\n            if(user){\n                let db = firebase.firestore();\n                db.collection('users').doc(user.uid).get().then((value)=>{\n                    this.setState({\n                        userName : value.data().name\n                    });\n                }).catch((error)=>{\n                    console.log(error);\n                })\n            }else{\n                this.setState({\n                    userName : null\n                });\n            }\n        })\n    }\n\n    handleLogOut=(event)=>{\n        event.preventDefault();\n        firebase.auth().signOut();\n    }\n\n    render(){\n            return(\n                <BNavbar bg=\"secondary\" expand=\"lg\">\n            <BNavbar.Brand href=\"#home\">React-Logo</BNavbar.Brand>\n            <BNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <BNavbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Link to=\"/\"><Nav.Link>Home</Nav.Link></Link>   \n                <Link to=\"/about\"><Nav.Link>About</Nav.Link></Link>\n                \n              </Nav>\n            {(this.state.userName)? <DropdownButton\n                        as={ButtonGroup}\n                    key=\"dark\"\n                    id=\"dropdown-button-drop-left\"\n                    variant=\"dark\"\n                    title={this.state.userName}\n                    menuAlign=\"right\"\n                >\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item > <Button onClick={this.handleLogOut}>\n                        Log Out\n                    </Button></Dropdown.Item>\n                </Dropdown.Menu>\n            </DropdownButton> \n                :\n                <div>\n                <Link to=\"/signup\" style={{color: '#FFF',margin: '20px'}}>Sign Up</Link>\n                <Link to=\"/login\" style={{color: '#FFF' }}>Log In</Link>\n                </div>    \n            }\n\n            </BNavbar.Collapse>\n          </BNavbar>\n        );\n    }\n}\n\nexport default Navbar;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":34,"nodeType":"63","messageId":"64","endLine":10,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":8,"column":5,"nodeType":"67","messageId":"68","endLine":10,"endColumn":6},{"ruleId":"61","severity":1,"message":"69","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"70","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":7,"column":5,"nodeType":"67","messageId":"68","endLine":9,"endColumn":6},{"ruleId":"61","severity":1,"message":"71","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"72","line":3,"column":21,"nodeType":"63","messageId":"64","endLine":3,"endColumn":25},{"ruleId":"61","severity":1,"message":"73","line":3,"column":26,"nodeType":"63","messageId":"64","endLine":3,"endColumn":36},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'createRef' is defined but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]