[{"/home/dhirajbhor11/WorkSpace/React/dashboard/src/index.js":"1","/home/dhirajbhor11/WorkSpace/React/dashboard/src/App.js":"2","/home/dhirajbhor11/WorkSpace/React/dashboard/src/reportWebVitals.js":"3","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/login.js":"4","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/dashboard.js":"5","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/signup.js":"6","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/routers.js":"7","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/forgetPassword.js":"8","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/home.js":"9"},{"size":907,"mtime":1607968359655,"results":"10","hashOfConfig":"11"},{"size":1284,"mtime":1607968324114,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606977965233,"results":"13","hashOfConfig":"11"},{"size":4285,"mtime":1607967947463,"results":"14","hashOfConfig":"11"},{"size":820,"mtime":1607967095970,"results":"15","hashOfConfig":"11"},{"size":6898,"mtime":1607761560048,"results":"16","hashOfConfig":"11"},{"size":801,"mtime":1607957171762,"results":"17","hashOfConfig":"11"},{"size":2244,"mtime":1607966620063,"results":"18","hashOfConfig":"11"},{"size":401,"mtime":1607956540958,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zf9nrn",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},"/home/dhirajbhor11/WorkSpace/React/dashboard/src/index.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/App.js",["43","44","45","46","47"],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/reportWebVitals.js",[],["48","49"],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/login.js",["50","51"],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/dashboard.js",["52"],"import React from 'react';\nimport { Card, Jumbotron,Button } from 'react-bootstrap';\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/auth';\n\nclass Dashboard extends React.Component{\n    constructor(){\n        super();\n    }\n    handleLogOut = () =>{\n        firebase.auth().signOut();\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Jumbotron>\n                    <h1>Welcome </h1>\n                </Jumbotron>\n                <Card style={{width:'18rem'}}>\n                    <Card.Img variant=\"top\" />\n                    <h3> User Loged In</h3>\n                    <Button onClick={this.handleLogOut}>\n                        Log Out\n                    </Button>\n                </Card>\n            </div>\n        );  \n    }\n}\n\nexport default  Dashboard;\n","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/signup.js",["53","54"],"import React, { createRef } from 'react';\nimport './css/signup.css';\nimport {Alert, Button, Card, Form, InputGroup }from 'react-bootstrap';\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\nimport Notiflix from 'notiflix-react';\n\nclass Signup extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            passwordType:'password',\n            confirmPasswordType : 'password',\n            passwordMatchAlert : 'none'\n        }\n\n        this.confirmPassword = React.createRef();\n        this.password = React.createRef();\n        this.name = React.createRef();\n        this.emailId = React.createRef(); \n    }\n\n    componentDidMount(){\n        Notiflix.Notify.Init({});\n    }\n\n    checkPasswordForMatch =()=>{\n        if(this.confirmPassword.current.value === this.password.current.value){\n            this.setState({passwordMatchAlert:'none'});\n            return true;\n        }else{\n            this.setState({passwordMatchAlert:'block'});\n            return false;\n        }\n    }\n\n    changePasswordType=(event)=>{\n        if(this.state.passwordType === 'password'){\n            this.setState({passwordType : 'text'});\n        }else {\n            this.setState({passwordType : 'password'});\n        }\n    }\n\n    changeConfirmPasswordType=(event)=>{\n        if(this.state.confirmPasswordType === 'password'){\n            this.setState({confirmPasswordType : 'text'});\n        }else {\n            this.setState({confirmPasswordType : 'password'});\n        }\n    }\n\n    onFormSubmit=(event)=>{\n        if(!this.checkPasswordForMatch()){\n            const element = this.confirmPassword.current;\n            element.focus();\n            event.preventDefault();\n        }else {\n            console.log(this.emailId.current.value+\" && \"+ this.password.current.value);\n            firebase.auth().createUserWithEmailAndPassword(this.emailId.current.value,this.password.current.value).then((value)=>{\n                console.log(value);\n                Notiflix.Notify.Success(value.message);\n            }).catch((error)=>{\n                Notiflix.Notify.Failure(error.message);\n            });\n            event.preventDefault();\n            \n        }\n    }\n\n\n    getData=()=>{\n        let myData = {\n            \"name\" : this.name.current.value ,\n            \"emailId\" : this.emailId.current.value ,\n            \"password\" : this.password.current.value\n        }\n\n        return JSON.stringify(myData);\n    }\n\n    \n    render(){\n        return(\n            <div className=\"signupForm\">\n                <Card style={{width:\"40rem\"}}>\n                    <Card.Header><h1> Sign Up </h1></Card.Header>\n                    <Card.Body>\n                        <Form onSubmit={this.onFormSubmit}>\n                            <Form.Group >\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" required ref={this.name}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Email-Id</Form.Label>\n                                <Form.Control type=\"email\" required ref={this.emailId}/>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <InputGroup>\n                                    <Form.Control type={this.state.passwordType} required minLength='8' onChange={this.checkPasswordForMatch} ref={this.password}/>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text onClick={this.changePasswordType}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-eye\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 \n                                            11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 \n                                            4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\" />\n                                            <path fillRule=\"evenodd\" d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n                                            </svg>\n                                        </InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Confirm Password</Form.Label>\n                                <InputGroup>\n                                    <Form.Control type={this.state.confirmPasswordType} required minLength='8' onChange={this.checkPasswordForMatch} ref={this.confirmPassword}/>\n                                    <InputGroup.Append>\n                                        <InputGroup.Text onClick={this.changeConfirmPasswordType}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-eye\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\" d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 \n                                            11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 \n                                            4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\" />\n                                            <path fillRule=\"evenodd\" d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n                                            </svg>\n                                        </InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                                <small className=\"text-danger\" style={{display:this.state.passwordMatchAlert}}>Password Not Match</small>\n                            </Form.Group>\n                            <Button type=\"submit\"> \n                                Submit\n                            </Button>\n                        </Form>   \n                    </Card.Body>\n                    <Card.Footer>\n                        <Link to=\"/login\">Log In</Link>\n                    </Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default Signup;","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/routers.js",[],"/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/forgetPassword.js",["55"],"import React, { createRef } from 'react';\nimport firebase from 'firebase';\nimport {Button,Card,Form,FormGroup } from 'react-bootstrap';\nimport Notiflix from 'notiflix-react';\nimport {Redirect,Link} from 'react-router-dom';\nimport  './css/login.css';\n\n\nclass ForgetPassword extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            redirect : null\n        }\n        this.emailId = createRef();\n    }\n\n    onSubmit = (event)=>{\n        event.preventDefault();\n        console.log(this.emailId.current.value);\n        firebase.auth().sendPasswordResetEmail(this.emailId.current.value).then((value)=>{\n            Notiflix.Notify.Success(\"Password Reset Link send to Registered Email Address\");\n            this.setState({\n                redirect : '/login'\n            });\n        }).catch((error)=>{\n            Notiflix.Notify.Failure(error.code);\n        })\n    }\n\n\n\n    render(){\n        if(this.state.redirect){\n          return <Redirect to={this.state.redirect} />\n        }\n        return(\n            <div className=\"loginView\">\n                <Card style={{width:\"30rem\"}}>\n                    <Card.Header> <h1>Forgot Password </h1></Card.Header>\n                        <Card.Body>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Email Id </Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Please Enter Your Email\" required ref={this.emailId}/>\n                                </Form.Group>\n                                <Button onClick={this.onSubmit} type=\"submit\">Submit</Button>\n                        </Form>\n                    </Card.Body>\n                    <Card.Footer >\n                        <Button style={{margin:\"5px\"}}>\n                            <Link to=\"/login\" style={{color:'white'}}>Log In</Link>\n                        </Button>\n                        <Button>\n                            <Link to=\"/signup\" style={{color:'white'}}>Sign Up</Link>\n                        </Button>\n                    </Card.Footer>\n                </Card>      \n            </div>\n        );\n    }\n}\n\nexport default ForgetPassword;","/home/dhirajbhor11/WorkSpace/React/dashboard/src/components/home.js",["56"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nclass Home extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div>\n                    <Link to=\"/login\"> Log In</Link>\n                    <br />\n                    <Link to=\"/signup\">Sign up</Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;",{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":11,"column":34,"nodeType":"59","messageId":"60","endLine":11,"endColumn":38},{"ruleId":"57","severity":1,"message":"63","line":12,"column":8,"nodeType":"59","messageId":"60","endLine":12,"endColumn":16},{"ruleId":"57","severity":1,"message":"64","line":14,"column":8,"nodeType":"59","messageId":"60","endLine":14,"endColumn":22},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"57","severity":1,"message":"69","line":51,"column":12,"nodeType":"59","messageId":"60","endLine":51,"endColumn":15},{"ruleId":"57","severity":1,"message":"70","line":56,"column":11,"nodeType":"59","messageId":"60","endLine":56,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":8,"column":5,"nodeType":"73","messageId":"74","endLine":10,"endColumn":6},{"ruleId":"57","severity":1,"message":"75","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"76","line":3,"column":9,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"77","line":3,"column":26,"nodeType":"59","messageId":"60","endLine":3,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":7,"column":5,"nodeType":"73","messageId":"74","endLine":9,"endColumn":6},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","'Link' is defined but never used.","'Notiflix' is defined but never used.","'ForgetPassword' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'key' is assigned a value but never used.","'provider' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'createRef' is defined but never used.","'Alert' is defined but never used.","'FormGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]